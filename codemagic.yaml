workflows:
  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m1
    environment:
      xcode: latest
      cocoapods: default
      flutter: stable
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.pinewraps.app
      vars:
        IOS_BUNDLE_ID: "com.pinewraps.app"
    scripts:
      - name: Set up code signing
        script: |
          echo "Setting up code signing for iOS"
          # Initialize keychain
          keychain initialize
          
          # Use App Store Connect API for code signing
          app-store-connect fetch-signing-files "$IOS_BUNDLE_ID" \
            --type IOS_APP_STORE \
            --create
          keychain add-certificates
      
      - name: Clean build environment
        script: |
          echo "Cleaning build environment"
          cd "$FCI_BUILD_DIR"
          flutter clean
          
          # Clean iOS specific artifacts
          cd ios
          rm -rf Pods
          rm -rf Podfile.lock
          rm -rf .symlinks
          rm -rf Flutter/Flutter.framework
          rm -rf Flutter/Flutter.podspec
          rm -rf Flutter/App.framework
          rm -rf build
          
          # Remove privacy bundles
          find . -name "*_privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          find . -name "*-privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          find . -name "*Privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          
          cd ..
      
      - name: Install dependencies
        script: |
          echo "Installing dependencies"
          cd "$FCI_BUILD_DIR"
          flutter pub get
          
          # Install pods
          cd ios
          pod repo update
          pod install --repo-update
          
          # Remove privacy bundles after pod install
          find . -name "*_privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          find . -name "*-privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          find . -name "*Privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          
          cd ..
      
      - name: Set up Firebase configuration
        script: |
          echo "Setting up Firebase configuration"
          echo "$IOS_FIREBASE_CONFIG" > "$FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist"
      
      - name: Build iOS app
        script: |
          echo "Building iOS app"
          cd "$FCI_BUILD_DIR"
          flutter build ios --release --no-codesign
      
      - name: Package iOS app
        script: |
          echo "Packaging iOS app"
          cd "$FCI_BUILD_DIR"
          
          # Create archive
          xcode-project build-ipa \
            --workspace ios/Runner.xcworkspace \
            --scheme Runner \
            --config Release
    
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/xcarchive/*.xcarchive
    
    publishing:
      email:
        recipients:
          - sylvester@pinewraps.com
      app_store_connect:
        auth: integration
        submit_to_testflight: true

  android-workflow:
    name: Android Workflow
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      java: 11
      android_signing:
        - keystore_reference
    scripts:
      - name: Clean build environment
        script: |
          echo "Cleaning build environment"
          cd "$FCI_BUILD_DIR"
          flutter clean
          
          # Clean Android specific artifacts
          cd android
          ./gradlew clean
          cd ..
      
      - name: Install dependencies
        script: |
          echo "Installing dependencies"
          cd "$FCI_BUILD_DIR"
          flutter pub get
      
      - name: Set up Firebase configuration
        script: |
          echo "Setting up Firebase configuration"
          echo "$ANDROID_FIREBASE_CONFIG" > "$FCI_BUILD_DIR/android/app/google-services.json"
      
      - name: Build Android app
        script: |
          echo "Building Android app"
          cd "$FCI_BUILD_DIR"
          flutter build appbundle --release
          flutter build apk --release
    
    artifacts:
      - build/app/outputs/flutter-apk/*.apk
      - build/app/outputs/bundle/release/*.aab
    
    publishing:
      email:
        recipients:
          - sylvester@pinewraps.com
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal

  combined-workflow:
    name: iOS and Android Build
    instance_type: mac_mini_m1
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
    environment:
      xcode: latest
      cocoapods: default
      flutter: stable
      java: 11
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.pinewraps.app
      android_signing:
        - keystore_reference
      vars:
        IOS_BUNDLE_ID: "com.pinewraps.app"
    scripts:
      - name: Clean build environment
        script: |
          echo "Cleaning build environment"
          cd "$FCI_BUILD_DIR"
          flutter clean
          
          # Clean iOS specific artifacts
          cd ios
          rm -rf Pods
          rm -rf Podfile.lock
          rm -rf .symlinks
          rm -rf Flutter/Flutter.framework
          rm -rf Flutter/Flutter.podspec
          rm -rf Flutter/App.framework
          rm -rf build
          
          # Remove privacy bundles
          find . -name "*_privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          find . -name "*-privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          find . -name "*Privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          
          cd ..
          
          # Clean Android specific artifacts
          cd android
          ./gradlew clean
          cd ..
      
      - name: Install dependencies
        script: |
          echo "Installing dependencies"
          cd "$FCI_BUILD_DIR"
          flutter pub get
          
          # Install pods
          cd ios
          pod repo update
          pod install --repo-update
          
          # Remove privacy bundles after pod install
          find . -name "*_privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          find . -name "*-privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          find . -name "*Privacy.bundle" -type d -exec rm -rf {} \; 2>/dev/null || true
          
          cd ..
      
      - name: Set up code signing for iOS
        script: |
          echo "Setting up code signing for iOS"
          keychain initialize
          app-store-connect fetch-signing-files "$IOS_BUNDLE_ID" \
            --type IOS_APP_STORE \
            --create
          keychain add-certificates
      
      - name: Set up Firebase configuration
        script: |
          echo "Setting up Firebase configuration"
          echo "$IOS_FIREBASE_CONFIG" > "$FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist"
          echo "$ANDROID_FIREBASE_CONFIG" > "$FCI_BUILD_DIR/android/app/google-services.json"
      
      - name: Build iOS app
        script: |
          echo "Building iOS app"
          cd "$FCI_BUILD_DIR"
          flutter build ios --release --no-codesign
      
      - name: Package iOS app
        script: |
          echo "Packaging iOS app"
          cd "$FCI_BUILD_DIR"
          xcode-project build-ipa \
            --workspace ios/Runner.xcworkspace \
            --scheme Runner \
            --config Release
      
      - name: Build Android app
        script: |
          echo "Building Android app"
          cd "$FCI_BUILD_DIR"
          flutter build appbundle --release
          flutter build apk --release
    
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/xcarchive/*.xcarchive
      - build/app/outputs/flutter-apk/*.apk
      - build/app/outputs/bundle/release/*.aab
    
    publishing:
      email:
        recipients:
          - sylvester@pinewraps.com
