# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # Fix for Firebase modular headers issue
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'FirebaseMessaging', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'GoogleDataTransport', :modular_headers => true
  
  # Disable code signing for pods
  post_install do |installer|
    # Special fix for Codemagic build issues
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
    end
    
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ""
        config.build_settings['CODE_SIGNING_REQUIRED'] = "NO"
        config.build_settings['CODE_SIGNING_ALLOWED'] = "NO"
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        
        # Fix for modular header issues with Firebase
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        
        # Fix for Firebase Messaging header issue
        if target.name.start_with?('Firebase')
          config.build_settings['DEFINES_MODULE'] = 'YES'
        end
        
        # Aggressive fix for webview_flutter_wkwebview 'Flutter/Flutter.h' file not found error
        if target.name.include?('webview_flutter') || target.name.include?('FWF')
          # Add Flutter framework search paths
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "${PODS_ROOT}/../Flutter"
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "${PODS_CONFIGURATION_BUILD_DIR}/Flutter"
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "${PODS_ROOT}/../../Flutter"
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "${PODS_ROOT}/../../../Flutter"
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "${FLUTTER_ROOT}/bin/cache/artifacts/engine/ios/Flutter.xcframework/ios-arm64_armv7/Flutter.framework"
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "${FLUTTER_ROOT}/bin/cache/artifacts/engine/ios"
          
          # Add header search paths
          config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
          config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_ROOT}/Headers/Public/Flutter"
          config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_ROOT}/../Headers/Public/Flutter"
          config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_ROOT}/../../Headers/Public/Flutter"
          config.build_settings['HEADER_SEARCH_PATHS'] << "${FLUTTER_ROOT}/bin/cache/artifacts/engine/ios/Flutter.xcframework/ios-arm64_armv7/Flutter.framework/Headers"
          
          # Disable use of modules for Flutter headers
          config.build_settings['CLANG_MODULES_AUTOLINK'] = 'YES'
          config.build_settings['DEFINES_MODULE'] = 'YES'
          config.build_settings['SWIFT_INSTALL_OBJC_HEADER'] = 'YES'
          
          # Disable module validation for this target
          config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
          
          # Force include the Flutter header directory
          config.build_settings['OTHER_CFLAGS'] ||= ['$(inherited)']
          config.build_settings['OTHER_CFLAGS'] << "-I${PODS_ROOT}/Headers/Public/Flutter"
        end
        
        # Fix for all targets to ensure Flutter.h can be found
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${PODS_ROOT}/../Flutter'
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${PODS_CONFIGURATION_BUILD_DIR}/Flutter'
        
        # Add header search paths for all targets
        config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
        config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/Headers/Public/Flutter'
      end
    end
    
    # This is necessary for Xcode 14+
    installer.generated_projects.each do |project|
      project.targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
          
          # Enable arm64 for simulators (needed for Apple Silicon Macs)
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''
        end
      end
    end
  end
end

target 'RunnerTests' do
  inherit! :search_paths
end
